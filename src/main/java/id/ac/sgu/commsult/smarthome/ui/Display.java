/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nico
 */

package id.ac.sgu.commsult.smarthome.ui;

import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import id.ac.sgu.commsult.smartphone.properties.Properties;

public class Display extends javax.swing.JFrame implements ChangeListener {

	private double tempSliderValue;
	private double windSpeedSliderValue;
	private int timeSliderValue;

	public double getTempSliderValue() {
		return tempSliderValue;
	}

	public void setTempSliderValue(double tempSliderValue) {
		this.tempSliderValue = tempSliderValue;
	}

	public double getWindSpeedSliderValue() {
		return windSpeedSliderValue;
	}

	public void setWindSpeedSliderValue(double windSpeedSliderValue) {
		this.windSpeedSliderValue = windSpeedSliderValue;
	}

	public int getTimeSliderValue() {
		return timeSliderValue;
	}

	public void setTimeSliderValue(int timeSliderValue) {
		this.timeSliderValue = timeSliderValue;
	}

	/**
	 * Creates new form Display
	 */
	public Display() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		windSpeedLabel = new javax.swing.JLabel();
		temperatureLabel = new javax.swing.JLabel();
		timeLabel = new javax.swing.JLabel();
		acStatusLabel = new javax.swing.JLabel();
		blindsStatusLabel = new javax.swing.JLabel();

		timeSlider = new javax.swing.JSlider(0, 2400, 1200);
		timeSlider.addChangeListener(this);

		tempSlider = new javax.swing.JSlider(0, 50, 25);
		tempSlider.addChangeListener(this);

		windSpeedSlider = new javax.swing.JSlider(0, 200, 50);
		windSpeedSlider.addChangeListener(this);

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/thermometer.png"))); // NOI18N
		jLabel1.setText("Temperature: ");

		jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/wind.png"))); // NOI18N
		jLabel2.setText("Wind Speed:");

		jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clock.png"))); // NOI18N
		jLabel3.setText("Time:");

		windSpeedLabel.setText("0");

		temperatureLabel.setText("0");

		timeLabel.setText("00:00");

		acStatusLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/AC.png"))); // NOI18N
		acStatusLabel.setText("ON");

		blindsStatusLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blinds.png"))); // NOI18N
		blindsStatusLabel.setText("OFF");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(18, 18, 18).addComponent(acStatusLabel))
						.addGroup(layout.createSequentialGroup().addGap(132, 132, 132).addComponent(blindsStatusLabel)))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addGroup(layout.createSequentialGroup().addComponent(jLabel2)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(windSpeedLabel))
										.addGroup(layout.createSequentialGroup().addComponent(jLabel3)
												.addGap(18, 18, 18).addComponent(timeLabel))
										.addGroup(layout.createSequentialGroup().addComponent(jLabel1)
												.addGap(18, 18, 18).addComponent(temperatureLabel)))
								.addGap(87, 87, 87))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
								layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(tempSlider, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(timeSlider, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(windSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(52, 52, 52)))));
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
						.createSequentialGroup().addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout
										.createSequentialGroup().addGap(57, 57, 57).addGroup(
												layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(timeLabel).addComponent(jLabel3))
										.addGap(7, 7, 7)
										.addComponent(timeSlider, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1).addComponent(temperatureLabel))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(tempSlider, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel2).addComponent(windSpeedLabel)))
								.addGroup(layout.createSequentialGroup().addGap(45, 45, 45).addComponent(acStatusLabel)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(blindsStatusLabel)))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(windSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(20, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Display().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel windSpeedLabel;
	private javax.swing.JLabel temperatureLabel;
	private javax.swing.JLabel timeLabel;
	private javax.swing.JLabel acStatusLabel;
	private javax.swing.JLabel blindsStatusLabel;
	private javax.swing.JSlider timeSlider;
	private javax.swing.JSlider tempSlider;
	private javax.swing.JSlider windSpeedSlider;
	// End of variables declaration//GEN-END:variables

	/** Listen to the slider. */
	public void stateChanged(ChangeEvent e) {
		this.timeSliderValue = timeSlider.getValue();
		this.tempSliderValue = tempSlider.getValue();
		this.windSpeedSliderValue = windSpeedSlider.getValue();
		System.out.println("Values: " + timeSliderValue + "," + tempSliderValue + "," + windSpeedSliderValue);
	}

	public void updateInfo(double temp, double windSpeed, int time, boolean acIsOn, boolean blindsIsOpen) {

		temperatureLabel.setText("" + temp);
		windSpeedLabel.setText("" + windSpeed);
		String timeString = "" + time;
		if (timeString.length() < 3) {
			timeString = "0000";
		} else if (timeString.length() < 4) {
			timeString = "0" + timeString;
		}
		System.out.println(timeString);

		int minute = Integer.parseInt(timeString.substring(2, 4));
		minute = minute * 6 / 10;
		String minuteString = ""+minute;
		if(minuteString.length() < 2){
			minuteString = "0"+minuteString;
		}
		
		String hour = timeString.substring(0, 2);
		timeLabel.setText(hour + ":" + minuteString);

		if (acIsOn) {
			acStatusLabel.setText("ON");
		} else {
			acStatusLabel.setText("OFF");
		}

		if (blindsIsOpen) {
			blindsStatusLabel.setText("OPEN");
		} else {
			blindsStatusLabel.setText("CLOSED");
		}
	}
}
